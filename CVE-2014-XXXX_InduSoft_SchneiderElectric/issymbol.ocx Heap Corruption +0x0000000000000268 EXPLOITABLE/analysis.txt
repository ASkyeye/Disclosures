InternalID: indusoft0007
Target: Indusoft Web Studio
Module: issymbol.ocx
Type: heap overflow
MSEC: EXPLOITABLE

	Crash context

Description: User Mode Write AVShort Description: WriteAVExploitability Classification: EXPLOITABLERecommended Bug Title: Exploitable - User Mode Write AV starting at MSVCR90!memcpy+0x000000000000015c (Hash=0x05af6d57.0x6cfc84d3)User mode write access violations that are not near NULL are exploitable.0:000> reax=00000000 ebx=00000010 ecx=00000004 edx=00000000 esi=0a3020ed edi=0a320ff4eip=62eaaf7c esp=0012a614 ebp=0012a61c iopl=0         nv up ei ng nz ac pe cycs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010297MSVCR90!memcpy+0x15c:62eaaf7c 89448ffc        mov     dword ptr [edi+ecx*4-4],eax ds:0023:0a321000=????????

0:000> kbChildEBP RetAddr  Args to Child              0012a61c 62ea69ed 0a455ff4 0a44bfb1 00000010 MSVCR90!memcpy+0x15c0012a638 62553470 0a455ff4 00000010 0a44bfb1 MSVCR90!memcpy_s+0x4a0012a650 62552e5b 0a455ff4 00000010 0a44bfb1 mfc90u!ATL::Checked::memcpy_s+0x170012a67c 101f21e3 0a455ff4 00000010 f5655f27 mfc90u!CArchive::Read+0x49WARNING: Stack unwind information not available. Following frames may be wrong.0012a758 1021e8f0 0012bad0 f5655067 f5373d43 ISSymbol!DllUnregisterServer+0x1e83830012a818 1025dae0 0012bad0 0a438f28 0a450b8c ISSymbol!DllUnregisterServer+0x214a900012a83c 10263d75 0012bad0 f565426b 0025d570 ISSymbol!DllUnregisterServer+0x253c800012ba14 10260d88 0012bad0 f5654353 00000008 ISSymbol!DllUnregisterServer+0x259f150012bb2c 10261cf9 0012bf14 f5653b2f 008c001b ISSymbol!DllUnregisterServer+0x256f28â€¦

	Analysis

There is a loop near "ISSymbol!DllUnregisterServer+0x1e8383" which calls mfc90u!CArchive.Read(this,buf,0x10):

.text:101F2188 @loop:                                  ; CODE XREF: v_indusoft0007:loc_101F22DEj.text:101F2188                 mov     eax, [ebp+counter].text:101F218B                 add     eax, 1.text:101F218E                 mov     [ebp+counter], eax.text:101F2191.text:101F2191 loc_101F2191:                           ; CODE XREF: v_indusoft0007+2A6j.text:101F2191                 mov     ecx, [ebp+counter].text:101F2194                 cmp     ecx, [ebp+maxcounter].text:101F2197                 jge     loc_101F22E3.text:101F219D                 mov     edx, [ebp+counter].text:101F21A0                 shl     edx, 4.text:101F21A3                 mov     eax, [ebp+var_C8].text:101F21A9                 lea     ecx, [eax+edx+1ECh].text:101F21B0                 mov     [ebp+lpBuf], ecx.text:101F21B3                 mov     edx, [ebp+arg_0].text:101F21B6                 mov     eax, [edx+18h].text:101F21B9                 and     eax, 1.text:101F21BC                 neg     eax.text:101F21BE                 sbb     eax, eax.text:101F21C0                 add     eax, 1.text:101F21C3                 jz      short loc_101F21D5 ; nMax.text:101F21C5                 push    10h.text:101F21C7                 mov     ecx, [ebp+lpBuf].text:101F21CA                 push    ecx.text:101F21CB                 mov     ecx, [ebp+arg_0].text:101F21CE                 call    mfc90u_6811     ; CArchive__Write(CArchive *this, const void *lpBuf, unsigned int nMax).text:101F21D3                 jmp     short loc_101F21E3.text:101F21D5 ; ---------------------------------------------------------------------------.text:101F21D5.text:101F21D5 loc_101F21D5:                           ; CODE XREF: v_indusoft0007+2E3j.text:101F21D5                 push    10h             ; nMax.text:101F21D7                 mov     edx, [ebp+lpBuf] ; lpbuf.text:101F21DA                 push    edx.text:101F21DB                 mov     ecx, [ebp+arg_0] ; this.text:101F21DE                 call    mfc90u_5767     ;  CArchive__Read(CArchive *this, void *lpBuf, unsigned int nMax)

The above loop iterates over a buffer of pointers 16 bytes at a time, and fails at the edge of the heap chunk:

ISSymbol!DllUnregisterServer+0x1e8350:101f21b0 894d9c          mov     dword ptr [ebp-64h],ecx ss:0023:0012a6f4=d45f450a0:000> g0a455ff4  38 00 40 0a 00 60 45 0a-00 a0 3a 00 ?? ?? ?? ??  8.@..`E...:.????0a456004  ?? ?? ?? ?? ?? ?? ?? ??-?? ?? ?? ?? ?? ?? ?? ??  ????????????????0a456014  ?? ?? ?? ?? ?? ?? ?? ??-?? ?? ?? ?? ?? ?? ?? ??  ????????????????0a456024  ?? ?? ?? ?? ?? ?? ?? ??-?? ?? ?? ?? ?? ?? ?? ??  ????????????????0a456034  ?? ?? ?? ?? ?? ?? ?? ??-?? ?? ?? ?? ?? ?? ?? ??  ????????????????0a456044  ?? ?? ?? ?? ?? ?? ?? ??-?? ?? ?? ?? ?? ?? ?? ??  ????????????????0a456054  ?? ?? ?? ?? ?? ?? ?? ??-?? ?? ?? ?? ?? ?? ?? ??  ????????????????0a456064  ?? ?? ?? ?? ?? ?? ?? ??-?? ?? ?? ?? ?? ?? ?? ??  ????????????????eax=0a4548f8 ebx=00000000 ecx=0a455ff4 edx=00001510 esi=00000013 edi=00000008eip=101f21b0 esp=0012a68c ebp=0012a758 iopl=0         nv up ei pl nz na po nccs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202ISSymbol!DllUnregisterServer+0x1e8350:101f21b0 894d9c          mov     dword ptr [ebp-64h],ecx ss:0023:0012a6f4=e45f450a0:000> g(f6c.684): Access violation - code c0000005 (first chance)First chance exceptions are reported before any exception handling.This exception may be expected and handled.eax=00000000 ebx=00000010 ecx=00000004 edx=00000000 esi=0a44bfb1 edi=0a455ff4eip=62eaaf7c esp=0012a614 ebp=0012a61c iopl=0         nv up ei ng nz ac pe cycs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010297MSVCR90!memcpy+0x15c:62eaaf7c 89448ffc        mov     dword ptr [edi+ecx*4-4],eax ds:0023:0a456000=????????

The loop fails when the counter value reaches 151, while the maxcounter is 0x30001:

0:000> gBreakpoint 1 hiteax=00000151 ebx=00000000 ecx=00000151 edx=0a3bbfb1 esi=00000013 edi=00000008eip=101f2194 esp=0012a68c ebp=0012a758 iopl=0         nv up ei pl nz na po nccs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202ISSymbol!DllUnregisterServer+0x1e8334:101f2194 3b4df0          cmp     ecx,dword ptr [ebp-10h] ss:0023:0012a748=000100030:000> g(9f4.ae8): Access violation - code c0000005 (first chance)First chance exceptions are reported before any exception handling.This exception may be expected and handled.eax=00000000 ebx=00000010 ecx=00000004 edx=00000000 esi=0a3bbfb1 edi=0a3c5ff4eip=62eaaf7c esp=0012a614 ebp=0012a61c iopl=0         nv up ei ng nz ac pe cycs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010297MSVCR90!memcpy+0x15c:62eaaf7c 89448ffc        mov     dword ptr [edi+ecx*4-4],eax ds:0023:0a3c6000=????????

	Input taint

The value 0x300001 is read from the file foodtank.scr at offset 5207.	
